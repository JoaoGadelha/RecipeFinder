{"version":3,"sources":["Components/spinner.gif","Components/sadface.png","logo.jpg","Context.js","Components/Spinner.js","Components/MainPage.js","Components/Recipe.js","Components/Navbar.js","Components/Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Context","React","createContext","Provider","props","useState","searchResult","setSearchResult","apiKey","useEffect","fetch","then","resp","json","value","key","hasOwnProperty","Object","keys","children","Spinner","src","spinner","alt","style","width","margin","display","MainPage","useContext","setIdTitleVec","itemVec","idTitleVec","textAlign","marginTop","sadface","length","forEach","item","title","push","slice","limitString","Fragment","className","map","index","to","id","Recipe","match","setItem","params","i","toString","entries","analyzedInstructions","iter","Math","random","steps","iter2","index2","step","Navbar","Search","numberRecipes","state","setState","history","useHistory","logo","onSubmit","e","preventDefault","placeholder","onChange","target","onClick","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2d53643a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.aa7e6b7f.gif\";","module.exports = __webpack_public_path__ + \"static/media/sadface.f68949ce.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.562ed858.jpg\";","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport const Context = React.createContext();\r\n\r\nexport const Provider = (props) => {\r\n  let [searchResult, setSearchResult] = useState({});\r\n  let apiKey = \"b2a5298928f34afcba0d69eac20faedb\";\r\n  let numberRecipes = 12;\r\n  /* 1ac572967e9f4ccfb15e43d732b239b9 */\r\n  /* ddf9c8f7ce9244c2b9c4114d1238c9ff */\r\n  /* fdf8595ef8b84cc1bee09aeddd3b3675 */\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.spoonacular.com/recipes/random?number=${numberRecipes}&instructionsRequired=true&apiKey=${apiKey}`\r\n    )\r\n      .then((resp) => resp.json())\r\n      .then((resp) => {\r\n        setSearchResult(resp);\r\n      });\r\n  }, []);\r\n\r\n  const setIdTitleVec = () => {\r\n    for (var key in searchResult) {\r\n      if (searchResult.hasOwnProperty(key))\r\n        return searchResult[Object.keys(searchResult)[0]];\r\n    }\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <Context.Provider value={[searchResult, setSearchResult, setIdTitleVec,apiKey, numberRecipes]}>\r\n      {props.children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default Provider;\r\n","import React, { Fragment } from 'react'\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => <Fragment>\r\n      <img src={spinner} alt=\"Loading...\" style={{ width: '100px', margin: 'auto', display: 'block' }} />\r\n    </Fragment>\r\n\r\nexport default Spinner","import React, { useContext, useEffect } from \"react\";\r\nimport { Context } from \"../Context.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"./Spinner.js\";\r\nimport sadface from './sadface.png';\r\n\r\nconst MainPage = () => {\r\n  /* let { value1, value2 } = useContext(Context);\r\n  let [searchResult, setSearchResult] = value1;\r\n  let [randomResult, setRandomResult] = value2;\r\n */\r\n  let [searchResult, setSearchResult, setIdTitleVec, apiKey] = useContext(\r\n    Context\r\n  );\r\n  let [width, height] = [90, 90];\r\n  let itemVec = [];\r\n  let idTitleVec = setIdTitleVec();\r\n\r\n  const limitString = () => {\r\n    itemVec = [];\r\n    const limit = 20;\r\n\r\n    if (idTitleVec.length !== 0 && idTitleVec !== \"failure\") {\r\n      idTitleVec.forEach((item) => {\r\n        if (item.title.length > limit) {\r\n          itemVec.push(...[item.title.slice(0, limit) + \"...\"]);\r\n        } else {\r\n          itemVec.push(item.title);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  if (idTitleVec === \"failure\") {\r\n    return (\r\n      <div style = {{textAlign:'center', marginTop:'-20px'}}>\r\n        <img src = {sadface} style = {{width:'100px'}}/>\r\n        <h2 style={{ textAlign: \"center\" }}>\r\n          Limit of daily API calls reached           \r\n        </h2>\r\n        <h2 style={{textAlign:'center'}}>\r\n          Try again tomorrow\r\n        </h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!(idTitleVec && idTitleVec.length)) {\r\n    return <Spinner />;\r\n  } else {\r\n    limitString();\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"mainContainer\">\r\n          {idTitleVec.map((item, index) => (\r\n            <Link to={`/${item.id}`} className=\"recipeItem\" key={item.id}>\r\n              <div>\r\n                <img\r\n                  alt=\"RecipeImage\"\r\n                  src={`https://spoonacular.com/recipeImages/${item.id}-${width}x${height}.jpg`}\r\n                />\r\n                <i className=\"fas fa-utensils\"></i>{\" \"}\r\n                <span className=\"recipeTitle\">{itemVec[index]}</span>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MainPage;\r\n","import React, {useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { Context } from \"../Context.js\";\r\nimport Spinner from './Spinner.js';\r\n\r\nconst Recipe = ({ match }) => {\r\n  let [searchResult, setSearchResult, setIdTitleVec, apiKey] = useContext(Context);\r\n  let [item, setItem] = useState({});\r\n  let [width, height] = [312, 150];\r\n  let id = match.params.id;\r\n  let idTitleVec = setIdTitleVec();\r\n\r\n  /* function createMarkup() {\r\n    return {__html: item.instructions};\r\n  } */\r\n\r\n  if (!(idTitleVec && idTitleVec.length)) {\r\n    return (\r\n      <div className=\"recipeContainer\">\r\n        <h2>Recipe List is empty</h2>\r\n        <Link to=\"/\">Home</Link>\r\n      </div>\r\n    );\r\n  } else {\r\n    idTitleVec.forEach((i) => {\r\n      if (i.id.toString() === id) {\r\n        fetch(\r\n          `https://api.spoonacular.com/recipes/${id}/information?includeNutrition=true&apiKey=${apiKey}`\r\n        )\r\n          .then((resp) => resp.json())\r\n          .then((resp) => {      \r\n            setItem(resp);\r\n          });\r\n      }\r\n    });\r\n    if (Object.entries(item).length === 0) {\r\n      return (\r\n        <div className=\"recipeContainer\">\r\n          <Spinner/>\r\n          <Link to=\"/\">Home</Link>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"recipeContainer\">\r\n          <h2 className=\"recipeTitle\">{item.title}</h2>\r\n          <img\r\n            alt=\"RecipeImage\"\r\n            src={`https://spoonacular.com/recipeImages/${id}-${width}x${height}.jpg`}\r\n          />\r\n          {/* <div dangerouslySetInnerHTML={createMarkup()} /> */}\r\n          <ul>\r\n            {item.analyzedInstructions.map((iter, index) => {\r\n              return (\r\n                <div key={Math.random()} className=\"recipeStepContainer\">\r\n                  {iter.steps.map((iter2, index2) => {\r\n                    return (\r\n                      <div key={Math.random()}>\r\n                        <li key={Math.random()} className=\"IDK\">\r\n                          <h2 key={Math.random()}>Step {index2 + 1}</h2>\r\n                          {iter2.step}\r\n                        </li>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              );\r\n            })}\r\n          </ul>\r\n          <Link to=\"/\">Home</Link>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport default Recipe;\r\n","import React from 'react'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className='navbar'>\r\n            <h2>RecipeFinder</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { useState, useContext } from \"react\";\r\nimport logo from \"../logo.jpg\";\r\nimport { Context } from \"../Context.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Search = () => {\r\n  let [searchResult, setSearchResult, setIdTitleVec, apiKey, numberRecipes] = useContext(Context);\r\n  const [state, setState] = useState(\"\");\r\n  const history = useHistory();\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    setState(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault(); \r\n    setSearchResult({});   \r\n    fetch(\r\n      `https://api.spoonacular.com/recipes/search?query=${state}&number=${numberRecipes}&instructionsRequired=true&apiKey=${apiKey}`\r\n    )\r\n      .then((resp) => resp.json())\r\n      .then((resp) => setSearchResult(resp));\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const randButton = (e) => {\r\n    e.preventDefault();\r\n    setSearchResult({});\r\n    fetch(\r\n      `https://api.spoonacular.com/recipes/random?number=${numberRecipes}&instructionsRequired=true&apiKey=${apiKey}`\r\n    )\r\n      .then((resp) => resp.json())\r\n      .then((resp) => setSearchResult(resp));\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"searchContainer\">\r\n      <div className=\"divLogo\">\r\n        <img src={logo} alt=\"logo\" className=\"searchLogo\"></img>\r\n      </div>\r\n      <form onSubmit={onSubmit}>\r\n        <input placeholder=\"Search here...\" value={state} onChange={onChange}/>\r\n        <div className=\"buttonContainer\">\r\n          <button>Search</button>\r\n          <button onClick={randButton}>Random</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport MainPage from \"./Components/MainPage.js\";\nimport Recipe from \"./Components/Recipe\";\nimport { Provider } from \"./Context.js\";\nimport Navbar from \"./Components/Navbar\";\nimport Search from \"./Components/Search\";\nimport { Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Link to=\"/\" className=\"navbarLink\">\n            <Navbar />\n          </Link>\n          <Search />\n          <Switch>\n            <Route exact path=\"/\" component={MainPage} />\n            <Route exact path=\"/:id\" component={Recipe} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}